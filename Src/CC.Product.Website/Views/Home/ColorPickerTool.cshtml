@{
    ViewBag.Title = "Home Page";
}

<div id="colorPickerWrapper"></div>
<div id="customisedPickersExample" style="height:300px;width:200px">
    <input type="text" value="click here!" style="background-color: rgb(173, 209, 206); color: rgb(0, 0, 0);">
</div>

@section scripts{
<script src="~/Scripts/ColorPicker/dependencies/jquery.colors.pickers.hsl.dependencies.js"></script>
<script src="~/Scripts/ColorPicker/jquery-colors-pickers-hslCircle/jquery.colors.pickers.hslCircle.bundle.js"></script>
<script src="~/Scripts/ColorPicker/jquery-colors-pickers-hslLite/jquery.colors.pickers.hslLite.bundle.js"></script>

    <script type="text/javascript">
    $(function () {
        $('#colorPickerWrapper').hslCircleColorPicker('hsl');

        // append a picker wrapper to the body
        $('#customisedPickersExample').append($('<div/>').attr('id', 'customisedLitePicker').css('visibility', 'hidden'));

        // insert the picker
        $('#customisedLitePicker').hslLiteColorPicker({
            // set the original color to the left border
            onStartChange: function (color) {
                $('#customisedLitePicker>.hslLiteColorPicker').css('border-left-color', color.toString());
            },
            onChange: function (color) {
                // set the new color to the right border
                $('#customisedLitePicker>.hslLiteColorPicker').css('border-right-color', color.toString());

                updateInputFormColors(color);

            },
            // remove the border colors
            onEndChange: function (color) {
                $('#customisedLitePicker>.hslLiteColorPicker').css('border-color', 'transparent');
            },
            l: 75
        }).hide().css('visibility', '');

        // add hover titles and insert text before each scale
        $('#customisedLitePicker .h').before($('<p/>').text('1. Choose a colour'))
          .attr('title', '[ hue ]');
        $('#customisedLitePicker .s').before($('#customisedLitePicker .l')); // swap the lightness with the saturation scale
        $('#customisedLitePicker .l').before($('<p/>').text('2. How light (or dark)?'))
          .attr('title', '[ lightness ]');
        $('#customisedLitePicker .s').before($('<p/>').text('3. How much colour? (none = black+white)'))
          .attr('title', '[ saturation ]');


        // initiate the input color with the random one made by the color picker
        updateInputFormColors($('#customisedLitePicker').hslLiteColorPicker('color'));

        // show/hide the color picker
        $('#customisedPickersExample').bind('mouseleave', function () {
            $('#customisedLitePicker').slideUp();
        }).children('input').bind('focus click', function () {
            $('#customisedLitePicker').slideDown();
        }).keyup(function () {
            // try to update the color with the current text
            try {
                var newColor = $.colors(this.value);
                $('#customisedLitePicker').hslLiteColorPicker({ color: newColor });
                updateInputFormColors(newColor);
            } catch (e) { }
        });


        // update the input form (and set font color to opposing lightness so that it's visible)
        function updateInputFormColors(color) {

            var textColor = $.colors(color.get());
            textColor.model('HSL').set('s', 0).set('l', 100 - Math.round(textColor.get('l') / 100) * 100);
            $('#customisedPickersExample>input')
              .css('background-color', color.toString())
              .val(color.toString('hex'))
              .css('color', textColor.toString());
        }
    })

</script>
}