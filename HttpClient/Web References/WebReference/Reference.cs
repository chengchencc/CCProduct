//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34014.
// 
#pragma warning disable 1591

namespace HttpClient.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="OAWebServiceSoap11Binding", Namespace="http://impl.webservice.oa.newsoft.com")]
    public partial class OAWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback setWebServiceImplOperationCompleted;
        
        private System.Threading.SendOrPostCallback getNoticeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMoreTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMoreEncyclicOperationCompleted;
        
        private System.Threading.SendOrPostCallback getEncyclicListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getWebServiceImplOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTaskListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOaDeptsOperationCompleted;
        
        private System.Threading.SendOrPostCallback addSynchronousOperationCompleted;
        
        private System.Threading.SendOrPostCallback getOaUsersOperationCompleted;
        
        private System.Threading.SendOrPostCallback getMoreNoticeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public OAWebService() {
            this.Url = global::HttpClient.Properties.Settings.Default.HttpClient_WebReference_OAWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event setWebServiceImplCompletedEventHandler setWebServiceImplCompleted;
        
        /// <remarks/>
        public event getNoticeListCompletedEventHandler getNoticeListCompleted;
        
        /// <remarks/>
        public event getMoreTaskCompletedEventHandler getMoreTaskCompleted;
        
        /// <remarks/>
        public event getMoreEncyclicCompletedEventHandler getMoreEncyclicCompleted;
        
        /// <remarks/>
        public event getEncyclicListCompletedEventHandler getEncyclicListCompleted;
        
        /// <remarks/>
        public event getWebServiceImplCompletedEventHandler getWebServiceImplCompleted;
        
        /// <remarks/>
        public event getTaskListCompletedEventHandler getTaskListCompleted;
        
        /// <remarks/>
        public event getOaDeptsCompletedEventHandler getOaDeptsCompleted;
        
        /// <remarks/>
        public event addSynchronousCompletedEventHandler addSynchronousCompleted;
        
        /// <remarks/>
        public event getOaUsersCompletedEventHandler getOaUsersCompleted;
        
        /// <remarks/>
        public event getMoreNoticeCompletedEventHandler getMoreNoticeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setWebServiceImpl", RequestNamespace="http://impl.webservice.oa.newsoft.com", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setWebServiceImpl([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] IOAWebService webServiceImpl) {
            this.Invoke("setWebServiceImpl", new object[] {
                        webServiceImpl});
        }
        
        /// <remarks/>
        public void setWebServiceImplAsync(IOAWebService webServiceImpl) {
            this.setWebServiceImplAsync(webServiceImpl, null);
        }
        
        /// <remarks/>
        public void setWebServiceImplAsync(IOAWebService webServiceImpl, object userState) {
            if ((this.setWebServiceImplOperationCompleted == null)) {
                this.setWebServiceImplOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetWebServiceImplOperationCompleted);
            }
            this.InvokeAsync("setWebServiceImpl", new object[] {
                        webServiceImpl}, this.setWebServiceImplOperationCompleted, userState);
        }
        
        private void OnsetWebServiceImplOperationCompleted(object arg) {
            if ((this.setWebServiceImplCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setWebServiceImplCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getNoticeList", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getNoticeList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("getNoticeList", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getNoticeListAsync(string userId, string password) {
            this.getNoticeListAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void getNoticeListAsync(string userId, string password, object userState) {
            if ((this.getNoticeListOperationCompleted == null)) {
                this.getNoticeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetNoticeListOperationCompleted);
            }
            this.InvokeAsync("getNoticeList", new object[] {
                        userId,
                        password}, this.getNoticeListOperationCompleted, userState);
        }
        
        private void OngetNoticeListOperationCompleted(object arg) {
            if ((this.getNoticeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getNoticeListCompleted(this, new getNoticeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getMoreTask", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getMoreTask([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("getMoreTask", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMoreTaskAsync(string userId, string password) {
            this.getMoreTaskAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void getMoreTaskAsync(string userId, string password, object userState) {
            if ((this.getMoreTaskOperationCompleted == null)) {
                this.getMoreTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMoreTaskOperationCompleted);
            }
            this.InvokeAsync("getMoreTask", new object[] {
                        userId,
                        password}, this.getMoreTaskOperationCompleted, userState);
        }
        
        private void OngetMoreTaskOperationCompleted(object arg) {
            if ((this.getMoreTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMoreTaskCompleted(this, new getMoreTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getMoreEncyclic", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getMoreEncyclic([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("getMoreEncyclic", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMoreEncyclicAsync(string userId, string password) {
            this.getMoreEncyclicAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void getMoreEncyclicAsync(string userId, string password, object userState) {
            if ((this.getMoreEncyclicOperationCompleted == null)) {
                this.getMoreEncyclicOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMoreEncyclicOperationCompleted);
            }
            this.InvokeAsync("getMoreEncyclic", new object[] {
                        userId,
                        password}, this.getMoreEncyclicOperationCompleted, userState);
        }
        
        private void OngetMoreEncyclicOperationCompleted(object arg) {
            if ((this.getMoreEncyclicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMoreEncyclicCompleted(this, new getMoreEncyclicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getEncyclicList", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getEncyclicList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("getEncyclicList", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getEncyclicListAsync(string userId, string password) {
            this.getEncyclicListAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void getEncyclicListAsync(string userId, string password, object userState) {
            if ((this.getEncyclicListOperationCompleted == null)) {
                this.getEncyclicListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetEncyclicListOperationCompleted);
            }
            this.InvokeAsync("getEncyclicList", new object[] {
                        userId,
                        password}, this.getEncyclicListOperationCompleted, userState);
        }
        
        private void OngetEncyclicListOperationCompleted(object arg) {
            if ((this.getEncyclicListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getEncyclicListCompleted(this, new getEncyclicListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getWebServiceImpl", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Bare)]
        [return: System.Xml.Serialization.XmlElementAttribute("getWebServiceImplResponse", Namespace="http://impl.webservice.oa.newsoft.com")]
        public getWebServiceImplResponse getWebServiceImpl() {
            object[] results = this.Invoke("getWebServiceImpl", new object[0]);
            return ((getWebServiceImplResponse)(results[0]));
        }
        
        /// <remarks/>
        public void getWebServiceImplAsync() {
            this.getWebServiceImplAsync(null);
        }
        
        /// <remarks/>
        public void getWebServiceImplAsync(object userState) {
            if ((this.getWebServiceImplOperationCompleted == null)) {
                this.getWebServiceImplOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetWebServiceImplOperationCompleted);
            }
            this.InvokeAsync("getWebServiceImpl", new object[0], this.getWebServiceImplOperationCompleted, userState);
        }
        
        private void OngetWebServiceImplOperationCompleted(object arg) {
            if ((this.getWebServiceImplCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getWebServiceImplCompleted(this, new getWebServiceImplCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getTaskList", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getTaskList([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("getTaskList", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTaskListAsync(string userId, string password) {
            this.getTaskListAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void getTaskListAsync(string userId, string password, object userState) {
            if ((this.getTaskListOperationCompleted == null)) {
                this.getTaskListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTaskListOperationCompleted);
            }
            this.InvokeAsync("getTaskList", new object[] {
                        userId,
                        password}, this.getTaskListOperationCompleted, userState);
        }
        
        private void OngetTaskListOperationCompleted(object arg) {
            if ((this.getTaskListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTaskListCompleted(this, new getTaskListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getOaDepts", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getOaDepts([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unitName) {
            object[] results = this.Invoke("getOaDepts", new object[] {
                        unitName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOaDeptsAsync(string unitName) {
            this.getOaDeptsAsync(unitName, null);
        }
        
        /// <remarks/>
        public void getOaDeptsAsync(string unitName, object userState) {
            if ((this.getOaDeptsOperationCompleted == null)) {
                this.getOaDeptsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOaDeptsOperationCompleted);
            }
            this.InvokeAsync("getOaDepts", new object[] {
                        unitName}, this.getOaDeptsOperationCompleted, userState);
        }
        
        private void OngetOaDeptsOperationCompleted(object arg) {
            if ((this.getOaDeptsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOaDeptsCompleted(this, new getOaDeptsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:addSynchronous", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string addSynchronous([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string adminPwd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string name, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fullName, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string passwd, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string types) {
            object[] results = this.Invoke("addSynchronous", new object[] {
                        adminName,
                        adminPwd,
                        name,
                        fullName,
                        passwd,
                        types});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void addSynchronousAsync(string adminName, string adminPwd, string name, string fullName, string passwd, string types) {
            this.addSynchronousAsync(adminName, adminPwd, name, fullName, passwd, types, null);
        }
        
        /// <remarks/>
        public void addSynchronousAsync(string adminName, string adminPwd, string name, string fullName, string passwd, string types, object userState) {
            if ((this.addSynchronousOperationCompleted == null)) {
                this.addSynchronousOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSynchronousOperationCompleted);
            }
            this.InvokeAsync("addSynchronous", new object[] {
                        adminName,
                        adminPwd,
                        name,
                        fullName,
                        passwd,
                        types}, this.addSynchronousOperationCompleted, userState);
        }
        
        private void OnaddSynchronousOperationCompleted(object arg) {
            if ((this.addSynchronousCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.addSynchronousCompleted(this, new addSynchronousCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getOaUsers", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getOaUsers([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string unitName) {
            object[] results = this.Invoke("getOaUsers", new object[] {
                        unitName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getOaUsersAsync(string unitName) {
            this.getOaUsersAsync(unitName, null);
        }
        
        /// <remarks/>
        public void getOaUsersAsync(string unitName, object userState) {
            if ((this.getOaUsersOperationCompleted == null)) {
                this.getOaUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOaUsersOperationCompleted);
            }
            this.InvokeAsync("getOaUsers", new object[] {
                        unitName}, this.getOaUsersOperationCompleted, userState);
        }
        
        private void OngetOaUsersOperationCompleted(object arg) {
            if ((this.getOaUsersCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getOaUsersCompleted(this, new getOaUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getMoreNotice", RequestNamespace="http://impl.webservice.oa.newsoft.com", ResponseNamespace="http://impl.webservice.oa.newsoft.com", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getMoreNotice([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string userId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string password) {
            object[] results = this.Invoke("getMoreNotice", new object[] {
                        userId,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getMoreNoticeAsync(string userId, string password) {
            this.getMoreNoticeAsync(userId, password, null);
        }
        
        /// <remarks/>
        public void getMoreNoticeAsync(string userId, string password, object userState) {
            if ((this.getMoreNoticeOperationCompleted == null)) {
                this.getMoreNoticeOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetMoreNoticeOperationCompleted);
            }
            this.InvokeAsync("getMoreNotice", new object[] {
                        userId,
                        password}, this.getMoreNoticeOperationCompleted, userState);
        }
        
        private void OngetMoreNoticeOperationCompleted(object arg) {
            if ((this.getMoreNoticeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getMoreNoticeCompleted(this, new getMoreNoticeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://webservice.oa.newsoft.com/xsd")]
    public partial class IOAWebService {
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34230")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://impl.webservice.oa.newsoft.com")]
    public partial class getWebServiceImplResponse {
        
        private IOAWebService returnField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public IOAWebService @return {
            get {
                return this.returnField;
            }
            set {
                this.returnField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void setWebServiceImplCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getNoticeListCompletedEventHandler(object sender, getNoticeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getNoticeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getNoticeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMoreTaskCompletedEventHandler(object sender, getMoreTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMoreTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMoreTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMoreEncyclicCompletedEventHandler(object sender, getMoreEncyclicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMoreEncyclicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMoreEncyclicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getEncyclicListCompletedEventHandler(object sender, getEncyclicListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getEncyclicListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getEncyclicListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getWebServiceImplCompletedEventHandler(object sender, getWebServiceImplCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getWebServiceImplCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getWebServiceImplCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getWebServiceImplResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getWebServiceImplResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getTaskListCompletedEventHandler(object sender, getTaskListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTaskListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTaskListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getOaDeptsCompletedEventHandler(object sender, getOaDeptsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOaDeptsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOaDeptsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void addSynchronousCompletedEventHandler(object sender, addSynchronousCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class addSynchronousCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal addSynchronousCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getOaUsersCompletedEventHandler(object sender, getOaUsersCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getOaUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getOaUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    public delegate void getMoreNoticeCompletedEventHandler(object sender, getMoreNoticeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.33440")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getMoreNoticeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getMoreNoticeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591